# =====================================================
# LIBRARY MANAGEMENT SYSTEM - ENVIRONMENT CONFIGURATION
# =====================================================
# Professional Django Environment Variables
# Copy this file to .env and update with your actual values
# =====================================================

# =====================================================
# CORE DJANGO SETTINGS
# =====================================================

# Secret key for Django - CHANGE THIS IN PRODUCTION!
# Generate a new one: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=django-insecure-change-this-in-production-library-management-system-2024

# Debug mode - SET TO FALSE IN PRODUCTION!
DEBUG=True

# Allowed hosts - comma separated list
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,your-domain.com

# Environment type
ENVIRONMENT=development

# =====================================================
# DATABASE CONFIGURATION
# =====================================================

# PostgreSQL Database Settings (Recommended for production)
DB_NAME=library_management_db
DB_USER=postgres
DB_PASSWORD=your_secure_password_here
DB_HOST=localhost
DB_PORT=5432

# Alternative: SQLite for development (uncomment if using SQLite)
# DATABASE_URL=sqlite:///db.sqlite3

# =====================================================
# REDIS CONFIGURATION
# =====================================================

# Redis for caching and Celery broker
REDIS_URL=redis://localhost:6379/0

# Alternative Redis configurations
# REDIS_URL=redis://username:password@localhost:6379/0
# REDIS_URL=redis://redis-server:6379/1

# =====================================================
# EMAIL CONFIGURATION
# =====================================================

# Email backend
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# SMTP Configuration (for production email)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password
# DEFAULT_FROM_EMAIL=Library Management System <noreply@yourdomain.com>

# SendGrid Configuration (Alternative)
# EMAIL_BACKEND=sendgrid_backend.SendgridBackend
# SENDGRID_API_KEY=your-sendgrid-api-key

# =====================================================
# CORS AND SECURITY SETTINGS
# =====================================================

# CORS allowed origins - Frontend URLs
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:3001

# CSRF trusted origins
CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# =====================================================
# THIRD-PARTY API KEYS
# =====================================================

# Google Books API for book metadata
GOOGLE_BOOKS_API_KEY=your-google-books-api-key

# SendGrid API Key
SENDGRID_API_KEY=your-sendgrid-api-key

# Sentry for error tracking (production)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =====================================================
# FILE STORAGE CONFIGURATION
# =====================================================

# AWS S3 Configuration (for production file storage)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_STORAGE_BUCKET_NAME=your-bucket-name
# AWS_S3_REGION_NAME=us-east-1
# AWS_S3_CUSTOM_DOMAIN=your-cloudfront-domain.cloudfront.net

# =====================================================
# MONITORING AND ANALYTICS
# =====================================================

# Google Analytics
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Prometheus monitoring
ENABLE_PROMETHEUS=True

# =====================================================
# CELERY CONFIGURATION
# =====================================================

# Celery broker and result backend (uses REDIS_URL by default)
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Celery worker settings
CELERY_WORKER_CONCURRENCY=4
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000

# =====================================================
# SEARCH ENGINE CONFIGURATION
# =====================================================

# Elasticsearch for advanced search (optional)
# ELASTICSEARCH_URL=http://localhost:9200
# ELASTICSEARCH_INDEX_PREFIX=library_

# =====================================================
# NOTIFICATION SERVICES
# =====================================================

# SMS Service Configuration
# TWILIO_ACCOUNT_SID=your-twilio-account-sid
# TWILIO_AUTH_TOKEN=your-twilio-auth-token
# TWILIO_PHONE_NUMBER=+1234567890

# Push Notification Services
# FIREBASE_SERVER_KEY=your-firebase-server-key
# FIREBASE_SENDER_ID=your-firebase-sender-id

# =====================================================
# EXTERNAL INTEGRATIONS
# =====================================================

# Payment Gateway (for fines)
# STRIPE_PUBLIC_KEY=pk_test_your_stripe_public_key
# STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key

# OAuth2 Configuration
# GOOGLE_OAUTH2_CLIENT_ID=your-google-client-id
# GOOGLE_OAUTH2_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth (for academic integration)
# GITHUB_CLIENT_ID=your-github-client-id
# GITHUB_CLIENT_SECRET=your-github-client-secret

# =====================================================
# LOGGING CONFIGURATION
# =====================================================

# Log level
LOG_LEVEL=INFO

# External log aggregation
# LOGSTASH_HOST=localhost
# LOGSTASH_PORT=5959

# =====================================================
# SECURITY ENHANCEMENTS
# =====================================================

# Rate limiting
RATE_LIMIT_ANON=100/hour
RATE_LIMIT_USER=1000/hour

# Session security
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# Content Security Policy
# CSP_DEFAULT_SRC='self'
# CSP_SCRIPT_SRC='self' 'unsafe-inline'
# CSP_STYLE_SRC='self' 'unsafe-inline'

# =====================================================
# DEVELOPMENT TOOLS
# =====================================================

# Django Debug Toolbar
ENABLE_DEBUG_TOOLBAR=True

# Django Extensions
ENABLE_DJANGO_EXTENSIONS=True

# =====================================================
# BACKUP AND MAINTENANCE
# =====================================================

# Database backup settings
# BACKUP_ENABLED=True
# BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
# BACKUP_RETENTION_DAYS=30

# Maintenance mode
MAINTENANCE_MODE=False

# =====================================================
# LIBRARY-SPECIFIC SETTINGS
# =====================================================

# Library business rules
MAX_BOOKS_PER_USER=5
LOAN_DURATION_DAYS=14
MAX_RENEWAL_COUNT=2
FINE_PER_DAY=1000
RESERVATION_DURATION_HOURS=24
NOTIFICATION_DAYS_BEFORE_DUE=3
AUTO_SUSPEND_AFTER_DAYS=30

# Library contact information
LIBRARY_NAME=Professional Library Management System
LIBRARY_EMAIL=admin@library.local
LIBRARY_PHONE=+998901234567
LIBRARY_ADDRESS=123 Library Street, Tashkent, Uzbekistan

# =====================================================
# TIMEZONE AND LOCALIZATION
# =====================================================

# Timezone
TIME_ZONE=Asia/Tashkent

# Default language
LANGUAGE_CODE=en-us

# Supported languages
SUPPORTED_LANGUAGES=en,uz,ru

# =====================================================
# PERFORMANCE OPTIMIZATION
# =====================================================

# Database connection pooling
DB_CONN_MAX_AGE=60
DB_CONN_HEALTH_CHECKS=True

# Cache timeout
CACHE_TIMEOUT=300

# Static files compression
ENABLE_COMPRESSION=True
ENABLE_GZIP=True

# =====================================================
# TESTING CONFIGURATION
# =====================================================

# Test database
TEST_DATABASE_NAME=test_library_db

# Test runner
TEST_RUNNER=pytest

# =====================================================
# DOCKER CONFIGURATION
# =====================================================

# Docker environment variables
COMPOSE_PROJECT_NAME=library_management
DOCKER_BUILDKIT=1

# Container ports
DJANGO_PORT=8000
POSTGRES_PORT=5432
REDIS_PORT=6379
NGINX_PORT=80

# =====================================================
# CI/CD CONFIGURATION
# =====================================================

# GitHub Actions
GITHUB_TOKEN=your-github-token

# Deployment
DEPLOY_ENVIRONMENT=staging
DEPLOY_BRANCH=main

# =====================================================
# NOTES
# =====================================================
# 1. Never commit .env files to version control
# 2. Use strong passwords and API keys
# 3. Rotate secrets regularly
# 4. Use environment-specific configurations
# 5. Monitor logs for security issues
# 6. Regular backup of environment configurations
# ===================================================== 