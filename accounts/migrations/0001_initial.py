# Generated by Django 5.2.2 on 2025-06-07 15:52

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email address"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Username"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("super_admin", "Super Administrator"),
                            ("librarian", "Librarian"),
                            ("teacher", "Teacher"),
                            ("student", "Student"),
                            ("member", "Library Member"),
                        ],
                        default="member",
                        help_text="User role determines access permissions",
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "account_status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("pending_activation", "Pending Activation"),
                        ],
                        default="pending_activation",
                        max_length=20,
                        verbose_name="Account status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="First name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Last name"
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Middle name"
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of birth"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                            ("prefer_not_to_say", "Prefer not to say"),
                        ],
                        max_length=20,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Format: +998901234567 or 901234567",
                        max_length=20,
                        null=True,
                        unique=True,
                        validators=[accounts.models.UzbekistanPhoneValidator()],
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "address_line_1",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Address line 1"
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Address line 2"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="City"),
                ),
                (
                    "state_province",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="State/Province"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Postal code"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="Uzbekistan", max_length=100, verbose_name="Country"
                    ),
                ),
                (
                    "profession_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("education", "Education"),
                            ("healthcare", "Healthcare"),
                            ("technology", "Technology"),
                            ("research", "Research"),
                            ("student", "Student"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Profession category",
                    ),
                ),
                (
                    "profession_title",
                    models.CharField(
                        blank=True,
                        help_text="e.g., Software Engineer, Teacher, Student",
                        max_length=100,
                        verbose_name="Profession title",
                    ),
                ),
                (
                    "workplace_organization",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Workplace/Organization",
                    ),
                ),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        help_text="Upload a profile photo (JPG, PNG, WebP)",
                        null=True,
                        upload_to="users/profiles/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "webp"]
                            )
                        ],
                        verbose_name="Profile photo",
                    ),
                ),
                (
                    "identity_document_front",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="users/documents/identity/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "pdf"]
                            )
                        ],
                        verbose_name="Identity document (front)",
                    ),
                ),
                (
                    "identity_document_back",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="users/documents/identity/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "pdf"]
                            )
                        ],
                        verbose_name="Identity document (back)",
                    ),
                ),
                (
                    "identity_document_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("national_id", "National ID Card"),
                            ("passport", "Passport"),
                            ("student_id", "Student ID"),
                            ("employee_id", "Employee ID"),
                        ],
                        max_length=20,
                        verbose_name="Identity document type",
                    ),
                ),
                (
                    "identity_document_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        validators=[accounts.models.IDCardNumberValidator()],
                        verbose_name="Identity document number",
                    ),
                ),
                (
                    "selfie_photo",
                    models.ImageField(
                        blank=True,
                        help_text="Upload a clear selfie for identity verification",
                        null=True,
                        upload_to="users/selfies/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png"]
                            )
                        ],
                        verbose_name="Selfie photo",
                    ),
                ),
                (
                    "professional_document",
                    models.FileField(
                        blank=True,
                        help_text="Upload work ID, student ID, or professional certificate",
                        null=True,
                        upload_to="users/documents/professional/%Y/%m/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                ]
                            )
                        ],
                        verbose_name="Professional document",
                    ),
                ),
                (
                    "email_verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Email verification status",
                    ),
                ),
                (
                    "phone_verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Phone verification status",
                    ),
                ),
                (
                    "identity_verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Identity verification status",
                    ),
                ),
                (
                    "professional_verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Professional verification status",
                    ),
                ),
                (
                    "is_fully_verified",
                    models.BooleanField(
                        default=False,
                        help_text="True when all required verifications are approved",
                        verbose_name="Is fully verified",
                    ),
                ),
                (
                    "email_verified_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Email verified at"
                    ),
                ),
                (
                    "phone_verified_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Phone verified at"
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Last login IP"
                    ),
                ),
                (
                    "profile_visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("members_only", "Library members only"),
                            ("private", "Private"),
                        ],
                        default="members_only",
                        max_length=20,
                        verbose_name="Profile visibility",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Email notifications"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, verbose_name="SMS notifications"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "accounts_user",
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(max_length=40, unique=True)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("login_time", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Session",
                "verbose_name_plural": "User Sessions",
                "db_table": "accounts_user_session",
            },
        ),
        migrations.CreateModel(
            name="UserVerificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("verification_type", models.CharField(max_length=50)),
                ("old_status", models.CharField(max_length=20)),
                ("new_status", models.CharField(max_length=20)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verifications_performed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Verification Log",
                "verbose_name_plural": "User Verification Logs",
                "db_table": "accounts_user_verification_log",
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="accounts_us_email_74c8d6_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["username"], name="accounts_us_usernam_c0ea66_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="accounts_us_role_1fa9a5_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["account_status"], name="accounts_us_account_8a6ddb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone_number"], name="accounts_us_phone_n_613c4a_idx"
            ),
        ),
    ]
